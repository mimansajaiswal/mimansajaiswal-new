---
title: "What is the easiest way to create AND maintain a personal academic website?"
date: 2023-07-31
display-date: Jul 2023
format: html
categories: [Tools, Website, Academia]
filters:
  - collapse-social-embeds
  - lightbox
draft: false
reference-location: margin
citation-location: margin
lightbox: auto
---

Another week of personal website debate on Twitter, another set of heavy compilation based suggestions to create and maintain a personal website. So, I decided to take a look at all the recent website builders and provide a set of recommendations. If you do not want to read this in entirety, my suggestions can be summarized below:

::: callout-note
## Summary of available website building options: sorted from most to least recommended. Use:

*This document only talks about the first 4 options.*

1.  [Montaigne] if you want the easiest option ever. (Apple Notes only, you can use icloud Apple Notes)

2.  [Notion to Astro], if you want to write in Notion, and are okay setting up github actions once for automatic deployment.

3.  [Decap CMS or Cloud Cannon] if you want to host the static site elsewhere, but sync the content (editable in wysiwyg) with github.

4.  [Quarto](https://quarto.org/) (how [this website](https://github.com/mimansajaiswal/mimansajaiswal.github.io) is made) if you want heavy LaTeX support and the ability to embed runnable visualizations/code in your document.

5.  [editable.website](https://editable.website/) if you want to edit the website easily, but are willing to spend time on the [first setup on fly.io](https://github.com/michael/editable-website#deployment-to-flyio).

6.  [Google Sites](https://sites.google.com/) if you are okay with your data not being portable, but want a quick editing experience.

7.  Use [Astro](https://astro.build/) with [Dark Matter](https://getdarkmatter.dev/) (ping on [twitter](https://twitter.com/vadimdemedes/status/1681051391186329603) for access) if you are proficient with writing main page content in HTML, but want to write blog posts/collections in markdown. Suggested themes: [Astro Paper](https://github.com/satnaing/astro-paper) and [Astro Cactus](https://github.com/chrismwilliams/astro-theme-cactus).

8.  Use [Hugo](https://gohugo.io/) or [Jekyll](https://jekyllrb.com/) (for example [Paper Mod](https://github.com/adityatelange/hugo-PaperMod)) if you trust yourself to keep up with the process required to maintain this website.
:::

# Montaigne

::: {.callout-note appearance="minimal" icon="false"}
**Website**: [montaigne](https://montaigne.io/)

**Demo Website**: [Demo Website Created Using Montaigne](https://mimansajaiswal.montaigne.io/)

**Demo Content**: [Apple Notes Folder Used To Create Demo Website](https://www.icloud.com/notes/015MtzesWUvmeenWEvIgjN2-g#mimansajaiswal.montaigne)

**Note**: The developer has kindly suggested that they would be willing to a pay-what-you-want option for students who use montaigne and need to point it to a custom domain. Their pricing suggests it is \$2/mo, but please contact them over Twitter or email for subsidized custom domain pricing.
:::

I knew about montaigne for around 4 months, but never gave it a serious look. Who wants a website made out of their Apple Notes, with no customization and not much to look at? Oh well, I was wrong!

## Example Website

[Here is the website](https://mimansajaiswal.montaigne.io/) I made using montaigne. Man, it works! There is nothing missing in it, that I would need on a personal website! Sure, it does not have comments using giscus as I do, but who really needs that? Yes, the domain is hard to spell, but, the developer very kindly offered a pay what you want pricing for custom domains. Yes, you cannot host it on github, but the content is all in Apple Notes. The day montaigne goes down, you will still have all your content with you and be able to port it elsewhere.

If you want to figure out what the source notes requires or needs, I even made the folder of notes that I use to create the website public ([Link](https://www.icloud.com/notes/015MtzesWUvmeenWEvIgjN2-g#mimansajaiswal.montaigne)).

## Supported Content

What all can you do using Apple Notes? Well a ton! You can customize your menu, headers etc. You can use images, videos, embeds, headings that have anchors. Take a look [here](https://mimansajaiswal.montaigne.io/research-notes/new-research-note)! Yes, the tags are clickable and filterable! You can do folders. It comes integrated with an RSS feed, quick links to your profiles in the footer, and a QR code to add on your research posters for someone to quick access your personal website.

## tl;dr

Honestly, I cannot recommend this option enough. The domain would cost you a bit (maybe \$10/year), if you go the custom domain route, but the ease of updating your website in a second beats any other options.

# Notion to Astro

::: {.callout-note appearance="minimal"}
**Website**: [Original Github Source](https://github.com/otoyo/astro-notion-blog)

**My Fork**: [Modified Astro Notion Blog Github Source](https://github.com/mimansajaiswal/demo-astro-notion-blog)

**Demo Website**: [Demo Website Using Astro Notion](https://mimansajaiswal.github.io/demo-astro-notion-blog/)

**Demo Content**: [Template To Create Demo Website](https://template-collector-mj.notion.site/5e35b59e7a0447a78b7b793ab63250a0)

**Note**: If you are okay with one time setup of github actions and github environment variables, this would be my recommended go to option. You can point it to a `username.github.io` domain or add a custom domain. You can deploy manually or on a cron schedule.
:::

Many of us now write in Notion. Yes, github static pages exist, but they aren't collaborative, they are a pain to edit, they aren't visual enough, you cannot talk through comments (no, I do not want to read through issues for a blog post, thank you).

Notion to Astro solves all of that. It gives you a writing environment in Notion, but renders it as a website through Astro. It allows you for ample customization by customizing the astro files and the associated CSS unlike montaigne.

## Example Website

The default notion to astro effort is rendering of a collection on the main page. The only problem with that structure is that most of us have an index file that is a list of things we do, and then a blog post. Many academic websites have no blog posts. So, I modified the template to suit the general style of academic websites. You can play around with it [here](https://mimansajaiswal.github.io/demo-astro-notion-blog/).

There are a few other additions too! I really loved the [Astro Cactus theme](https://astro-theme-cactus.netlify.app/) and the search functionality it provides. So, I used their code for [Pagefind](https://pagefind.app/) and integrated it into the original source code. If you are someone who is okay with editing JS files directly or proficient with Astro, you can find that theme [here](https://github.com/chrismwilliams/astro-theme-cactus). Another theme I will suggest for people who want to create in Astro rather than in Hugo/Jekyll is [Astro Paper](https://github.com/satnaing/astro-paper). Astro cactus did not have giscus. And I wanted giscus, because that is what I am using for my current websites, and I'll explain my workflow in detail in the [#Quarto] section, but if everything aligns, I will happily switch to using this method. So, I integrated giscus based off this [repo](https://github.com/piero-vic/pierolescano.com).

Yes, this is a hacked together repo, because I understand code, but I do not have it in me to figure out how astro works. No, GPT4 did not help much with the understanding part of the equation.

## Supported Content

Notion supports a ton of stuff, and so does the original repo from Otoyo. Here is the [original page](https://astro-notion-blog.pages.dev/posts/supported-blocks/) of supported content. In comparison to montaigne, it supports a ton of extra blocks, just because it is based off Notion (Apple Notes is feature limited, not montaigne's fault in this case). Specifically, as extras, it supports twitter embeds, link previews and bookmarks, code blocks with syntax highlights, synced blocks, toggles, files, callouts and highlights! What it is missing? Well, it does not support RSS feed or QR code and does not come with a supported footer section.

## tl;dr

If you are comfortable with github at all, and are okay setting up actions and environment variables (and creating an integration key in Notion), I will suggest this option. It is a one time option, it never needs to be touched again in a code format, it requires no push and pull. And if you are worried about what happens when Notion goes down, you can export your content in .md files and host it elsewhere 5 years later. As I said, this document is meant for pseudo-owning your content and convenience/accessibility. It ain't meant for "what happens when Notion no longer exists in 10 years, and my exports are not perfect".

# Decap CMS or Cloud Cannon

::: {.callout-note appearance="minimal"}
**Website**: [Decap CMS](https://decapcms.org/) or [Cloud Cannon](https://cloudcannon.com/)
:::

# Quarto

::: {.callout-note appearance="minimal"}
**Website**: [Quarto Official Website](https://quarto.org/) and [Using Quarto for Creating Websites](https://quarto.org/docs/websites/)

**Demo Website**: [You are on it!](mimansajaiswal.github.io)

**Demo Source Code**: [Github Repo](https://github.com/mimansajaiswal/mimansajaiswal.github.io)

**Note**: If you are okay with editing your website completely in markdown online, or creating a mirrored local repo and using the visual editor for Quarto in VS Code, then pushing the changes to github, you will do fine with Quarto. You almost always do not need such a complicated website, and it requires a ton of CSS to make it look good (feel free to copy mine), but it works with YAML and that is immensely useful, especially for stuff like papers ([example](https://github.com/mimansajaiswal/mimansajaiswal.github.io/blob/master/single_page/papers.yaml)) or experience ([example](https://github.com/mimansajaiswal/mimansajaiswal.github.io/blob/master/about_me/experience.yaml)) that you just need to keep adding.
:::

# Conclusion